{"version":3,"sources":["../../src/index.tsx","stitches.config.ts","Interactive.tsx","App.tsx","index.tsx"],"names":["Interactive","styled","css","createStyled","prefix","tokens","colors","$pageBackground","$highContrast","$lowContrast","$green","breakpoints","utils","darkThemeClass","theme","globalStyles","global","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","minHeight","backgroundColor","StyledDarkModeToggle","props","width","display","outlineColor","outline","outlineOffset","StyledLink","borderBottom","borderBottomStyle","variants","type","lowContrast","borderBottomWidth","AppDiv","maxWidth","H1","justifyContent","marginBottom","P","App","darkMode","useDarkMode","undefined","classNameDark","onClick","toggle","href","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAyB,WAAM,iE,SCA/B,OAAEC,EAAF,IAAUC,GAAQC,YAAa,CAC1CC,OAAQ,GACRC,OAAQ,CACNC,OAAQ,CACNC,gBAAiB,mBACjBC,cAAe,aACfC,aAAc,mBACdC,OAAQ,iBAGZC,YAAa,GACbC,MAAO,KAGIC,EAAiBX,EAAIY,MAAM,CACtCR,OAAQ,CACNC,gBAAiB,gBACjBC,cAAe,mBACfC,aAAc,mBACdC,OAAQ,kBAICK,EAAeb,EAAIc,OAAO,CACrC,gBAAiB,CACfC,IAAK,SAEP,+DAAgE,CAC9DC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,UAAW,UACXC,KAAM,UACNC,WAAY,UACZC,eAAgB,UAChBC,UAAW,UACXC,MAAO,UACPC,WAAY,eAEdC,KAAM,CACJC,OAAQ,QAEVC,KAAM,CACJD,OAAQ,OACRH,MAAO,gBACPK,WAAY,wCACZC,oBAAqB,cACrBC,oBAAqB,YACrBC,SAAU,OACVb,UAAW,aACXc,eAAgB,QAElB,QAAS,CACPC,UAAW,OACXC,gBAAiB,qB,eC5CRC,EAAuBrC,GARwBsC,GAExD,kDAAYA,GAAZ,aACE,cAAC,IAAD,CAASC,MAAM,KAAKX,OAAO,WAK0B,CACzDH,MAAO,gBACPc,MAAO,OACPX,OAAQ,OACRY,QAAS,eACT,mBAAoB,CAClBf,MAAO,UAET,SAAU,CAGRgB,aAAc,SACdC,QAAS,YACTC,cAAe,SAINC,EAAa5C,EAAO,IAAK,CACpCyB,MAAO,gBACPoB,aAAc,oBACdtB,eAAgB,OAEhB,mBAAoB,CAClBuB,kBAAmB,SAGrB,SAAU,CAGRL,aAAc,SACdC,QAAS,YACTC,cAAe,OAGjBI,SAAU,CACRC,KAAM,CACJC,YAAa,CACXxB,MAAO,eACPQ,SAAU,OACViB,kBAAmB,MAEnB,mBAAoB,CAClBzB,MAAO,sBChDX0B,EAASnD,EAAO,MAAO,CAC3BoD,SAAU,QACVjC,QAAS,iBACTF,OAAQ,WAGJoC,EAAKrD,EAAO,KAAM,CACtBiC,SAAU,OACVO,QAAS,OACTc,eAAgB,gBAChBC,aAAc,QAGVC,EAAIxD,EAAO,IAAK,CACpBiB,OAAQ,WAGGwC,EAAM,KACjB3C,IAEA,IAAM4C,EAAWC,iBAAYC,EAAW,CACtCC,cAAejD,IAGjB,OACE,eAACuC,EAAD,WACE,eAACE,EAAD,WACE,0DACA,cAAChB,EAAD,CAAsByB,QAASJ,EAASK,YAE1C,cAACnB,EAAD,CACEI,KAAK,cACLgB,KAAK,gDAFP,2DAMA,eAACR,EAAD,wGACyE,IACvE,cAACZ,EAAD,CAAYoB,KAAK,4CAAjB,4CAFF,OAOA,cAACR,EAAD,UACE,cAAC,EAAD,UC3CRS,IAASC,OACP,cAAC,aAAD,UACE,cAACT,EAAD,MAEFU,SAASC,eAAe,W","file":"static/js/main.8780c6b8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Interactive: React.VFC = () => <>react-interactive</>;\n","import { createStyled } from '@stitches/react';\n\nexport const { styled, css } = createStyled({\n  prefix: '',\n  tokens: {\n    colors: {\n      $pageBackground: 'rgb(240,240,240)',\n      $highContrast: 'rgb(0,0,0)',\n      $lowContrast: 'rgb(128,128,128)',\n      $green: 'rgb(0,168,0)',\n    },\n  },\n  breakpoints: {},\n  utils: {},\n});\n\nexport const darkThemeClass = css.theme({\n  colors: {\n    $pageBackground: 'rgb(32,32,32)',\n    $highContrast: 'rgb(192,192,192)',\n    $lowContrast: 'rgb(136,136,136)',\n    $green: 'rgb(0,168,0)',\n  },\n});\n\nexport const globalStyles = css.global({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import React from 'react';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\nconst DarkModeToggle: React.VFC<{ onClick: () => void }> = (props) => {\n  return (\n    <button {...props}>\n      <SunIcon width=\"30\" height=\"30\" />\n    </button>\n  );\n};\n\nexport const StyledDarkModeToggle = styled(DarkModeToggle, {\n  color: '$highContrast',\n  width: '30px',\n  height: '30px',\n  display: 'inline-block',\n  ':hover, &:active': {\n    color: '$green',\n  },\n  ':focus': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n\nexport const StyledLink = styled('a', {\n  color: '$highContrast',\n  borderBottom: '2px dotted $green',\n  textDecoration: 'none',\n\n  ':hover, &:active': {\n    borderBottomStyle: 'solid',\n  },\n\n  ':focus': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        borderBottomWidth: '1px',\n\n        ':hover, &:active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Interactive } from 'react-interactive';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport { StyledLink, StyledDarkModeToggle } from './Interactive';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nexport const App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  return (\n    <AppDiv>\n      <H1>\n        <span>React Interactive Demo</span>\n        <StyledDarkModeToggle onClick={darkMode.toggle} />\n      </H1>\n      <StyledLink\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </StyledLink>\n      <P>\n        This demo site for React Interactive v1 is under construction ðŸš§ðŸš§ the{' '}\n        <StyledLink href=\"https://react-interactive-v0.rafgraph.dev\">\n          v0 demo site can be found here\n        </StyledLink>\n        .\n      </P>\n      <P>\n        <Interactive />\n      </P>\n    </AppDiv>\n  );\n};\n","// import React so the demo app is compatible with code sandbox\n// which doesn't support the new JSX transform yet\n// see https://github.com/codesandbox/codesandbox-client/issues/5307\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}